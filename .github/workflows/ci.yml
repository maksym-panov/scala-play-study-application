name: Scala Play Application CI

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:

permissions:
  contents: read
  id-token: write
  security-events: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install SBT
        uses: sbt/setup-sbt@v1

      - name: Check Formatting
        run: sbt "scalafixAll --check" || (echo "Scalafix check failed!" && exit 1)

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Run CI environment
        run: |
          cd ./docker
          cp .env.template .env
          ./pull.sh
          ./env.sh

      - name: Run tests
        run: |
          sbt clean Ci/test coverageReport
          ls -lah target/scala-*/scoverage-report/

#      - name: Run SonarCloud Scan
#        uses: SonarSource/sonarcloud-github-action@v2
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Install SonarCloud Scan
        run: |
          java --version
          echo $JAVA_HOME
          echo $GITHUB_WORKSPACE
          sed -i 's|/unix|/github/workspace|g' target/scala-3.3.5/scoverage-report/scoverage.xml
          grep "/github/workspace" target/scala-3.3.5/scoverage-report/scoverage.xml        
          sudo apt update && sudo apt install -y unzip wget && \
          wget -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip && \
          sudo unzip sonar-scanner.zip -d /opt && \
          rm sonar-scanner.zip && \
          sudo ln -s /opt/sonar-scanner-5.0.1.3006-linux/bin/sonar-scanner /usr/local/bin/sonar-scanner && \
          echo "export PATH=/opt/sonar-scanner-5.0.1.3006-linux/bin:\$PATH" >> ~/.bashrc && \
          source ~/.bashrc
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}

      - name: Run SonarCloud Scan
        id: sonar
        run: |
          sonar-scanner --version
          sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
