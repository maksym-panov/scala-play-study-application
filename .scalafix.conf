rules = [
  DisableSyntax,             # Restrict dangerous syntax
  ExplicitResultTypes,       # Require explicit return types
  LeakingImplicitClassVal,   # Prevent leaking vals in implicit classes
  NoAutoTupling,             # Detect accidental auto-tupling
  NoValInForComprehension,   # Avoid `val` in for comprehensions
  OrganizeImports,           # Automatically reorder imports
  ProcedureSyntax,           # Enforce `def foo(): Unit` for side-effecting methods
  RedundantSyntax,           # Remove redundant code
  RemoveUnused               # Clean up unused imports, values, etc.
]

# === ExplicitResultTypes ===
ExplicitResultTypes.rewrite = true
ExplicitResultTypes.builtIn = ["all"]

# === RemoveUnused: Strict Cleanup ===
RemoveUnused.imports = true
RemoveUnused.locals = true
RemoveUnused.privateMembers = true

# === DisableSyntax: Ban Unsafe Constructs ===
DisableSyntax.noNulls = true
DisableSyntax.noReturns = true
DisableSyntax.noVars = true
DisableSyntax.noIsInstanceOf = true
DisableSyntax.noAsInstanceOf = true
DisableSyntax.noXml = true

# === OrganizeImports: Ensure Clean Imports ===
OrganizeImports.groupedImports = Merge
OrganizeImports.expandRelative = true

# === Linting: Enforce Issues to Fail ===
Lint.reportAllIssues = true
